#!/bin/bash

set -e

# For fixing merge conflicts from another user
# without adding the fork as a remote.
# The remote branch will be available locally with the name
# of the other user as a prefix to it.

user=$1
remotebranch=$2

if [ -z $user ] || [ -z $remotebranch ]; then
    echo "Usage: git-merge-conflict-branch USER REMOTEBRANCH"
    exit 1
fi

localbranch=$user-$remotebranch

repoinfo=`git remote -v | grep "origin.*fetch" | perl -lne '/origin\t(.+\@.+):(.+)\/(.+) \(fetch\)/ && print "$1;$2;$3"'`
repoinfo_split=(${repoinfo//;/ })
server=${repoinfo_split[0]}
local_user=${repoinfo_split[1]}
repo=${repoinfo_split[2]}
echo $repo

echo git fetch $server:$user/$repo $remotebranch:$localbranch
echo git checkout $localbranch

echo "Checked out the feature branch as $localbranch."
echo "Rebase and test, then create a new pull request"

